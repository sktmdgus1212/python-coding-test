- 동적 계획법
메모리를 적절히 사용하여 수행 시간 효율성을 향상
이미 계산된 결과는 별도의 메모리 영역에 저장하여 다시 계산 X

1. 탑 다운
= 메모이제이션
바텀 업
- 전형적인 형태
- 결과 저장용 리스트는 DP 테이블이라 함

1. 최적 부분 구조
- 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아 큰 문제를 해결
2. 중복되는 부분 문제
- 동일한 작은 문제를 반복적으로 해결

- 메모이제이션(캐싱)
한번 계산한 결과를 메모리 공간에 메모리를
캍은 문제를 다시 호출하면 메모했던 결과를 가져옴

- DP vs 분할 정복
두 방법 모두 최적 부분 구조를 가질 때 사용
단, dp는 각 부분 문제들이 서로 영향을 미치며 부분 문제가 중복됨
분할 정복 문제는 동일한 부분 문제가 반복적으로 계산 X

그리디, 구현, 완전 탐색 등의 아이디어로 문제를 해결할 수 있는지 검토
-> 다른 알고리즘 풀이 방법이 없다면 DP 고려
-> 재귀 함수로 비효율적인 완전 탐색 코드를 작성 후 메모이제이션 코드 개선
